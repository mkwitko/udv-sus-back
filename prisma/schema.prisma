generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "./generated/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id            String    @id @default(cuid())
  nome          String
  cpf           String?   @unique
  senha         String
  criadoEm      DateTime  @default(now())
  atualizadoEm  DateTime  @updatedAt
  deletadoEm    DateTime?
  deletado      Boolean   @default(false)
  email         String?   @unique
  ativo         Boolean   @default(true)
  administrador Boolean   @default(false)

  nucleo   Nucleos? @relation(fields: [nucleoId], references: [id])
  nucleoId String?

  @@map("usuarios")
}

model Nucleos {
  id           String     @id @default(cuid())
  nome         String
  regiao       String
  criadoEm     DateTime   @default(now())
  atualizadoEm DateTime   @updatedAt
  deletadoEm   DateTime?
  deletado     Boolean    @default(false)
  usuarios     Usuarios[]

  preparos Preparos[]
  sessoes  Sessoes[]

  @@map("nucleos")
}

model Sessoes {
  id                String   @id @default(cuid())
  sessao            String
  pessoas           String
  quantidadeVegetal String
  Nucleos           Nucleos? @relation(fields: [nucleosId], references: [id])
  nucleosId         String?
}

model Preparos {
  id String @id @default(cuid())

  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  deletadoEm   DateTime?
  deletado     Boolean   @default(false)

  inicio         DateTime
  fim            DateTime
  producaoLitros String

  mariri   Mariri? @relation(fields: [maririId], references: [id])
  maririId String?

  chacrona   Chacrona? @relation(fields: [chacronaId], references: [id])
  chacronaId String?

  lenha     Lenha?   @relation(fields: [lenhaId], references: [id])
  lenhaId   String?
  Nucleos   Nucleos? @relation(fields: [nucleosId], references: [id])
  nucleosId String?

  @@map("preparos")
}

model Mariri {
  id String @id @default(cuid())

  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  deletadoEm   DateTime?
  deletado     Boolean   @default(false)

  pesoKg         String
  unidades       String
  tipo           String
  tipoPlantacao  String
  origemMensagem String
  Preparos       Preparos[]

  @@map("mariri")
}

model Chacrona {
  id String @id @default(cuid())

  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  deletadoEm   DateTime?
  deletado     Boolean   @default(false)

  pesoKg         String
  unidades       String
  tipo           String
  tipoPlantacao  String
  origemMensagem String
  Preparos       Preparos[]

  @@map("chacrona")
}

model Lenha {
  id String @id @default(cuid())

  criadoEm     DateTime  @default(now())
  atualizadoEm DateTime  @updatedAt
  deletadoEm   DateTime?
  deletado     Boolean   @default(false)

  quantidadeM2       String
  tempoFornalhaAcesa String
  tipoLenha          String
  tipoFornalha       String
  Preparos           Preparos[]

  @@map("lenha")
}
